name: Harness

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  sandbox:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rojo
        uses: rojo-rbx/setup-rojo@v0
        with:
          version: v7

      - name: Install run-in-roblox
        uses: rojo-rbx/setup-run-in-roblox@v0
        with:
          version: v0.6.2

      - name: Build AutoParry harness place
        run: ./tests/build-place.sh

      - name: Execute loader harness
        run: run-in-roblox --place tests/AutoParryHarness.rbxl --script tests/init.server.lua

      - name: Run specs
        run: |
          set -o pipefail
          run-in-roblox --place tests/AutoParryHarness.rbxl --script tests/spec.server.lua | tee tests/spec-output.log

      - name: Collect spec artifacts
        if: always()
        run: |
          python - <<'PY'
import json
import os
import re

log_path = "tests/spec-output.log"
pattern = re.compile(r'^\[ARTIFACT\]\s+(\S+)\s+(.+)$')
artifacts = {}

with open(log_path, 'r', encoding='utf-8') as handle:
    for line in handle:
        match = pattern.match(line.strip())
        if match:
            name, payload = match.groups()
            artifacts[name] = json.loads(payload)

os.makedirs("tests/artifacts", exist_ok=True)

def write_artifact(key, filename):
    data = artifacts.get(key)
    if data is None:
        raise SystemExit(f"{key} artifact missing from spec output")
    with open(filename, "w", encoding="utf-8") as handle:
        json.dump(data, handle, indent=2)

write_artifact("ping-tti", "tests/artifacts/ping_tti.json")
write_artifact("ui-snapshot", "tests/artifacts/ui_snapshot.json")
PY

      - name: Upload ping metrics artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ping-tti-metrics
          path: tests/artifacts/ping_tti.json

      - name: Upload UI snapshot artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-snapshot
          path: tests/artifacts/ui_snapshot.json
